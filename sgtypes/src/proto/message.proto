syntax = "proto3";
option go_package = "starcoin/sgtypes";
package sgtypes;

import "channel_transaction.proto";

message RawNegotiateMessage {
    bytes sender_addr = 1;
    StructTag resource_type = 2 ;
    int64 sender_amount = 3 ;
    bytes receiver_addr= 4;
    int64 receiver_amount = 5 ;
}

message OpenChannelNodeNegotiateMessage {
    RawNegotiateMessage raw_message = 1;
    bytes sender_sign = 2 ;
    bytes receiver_sign = 3 ;
}

message AddressMessage {
    bytes addr = 1;
    bytes ip_addr = 2;
}

message StructTag {
    bytes account_addr = 1;
    string module = 2;
    string name =3;
    repeated StructTag type_params = 4;
}

enum ErrorCode {
    UNKNOWN = 0;
    SEQUENCE_NUMBER_WRONG = 1;
    TIMEOUT=2;
}

message ErrorMessage {
    bytes raw_transaction_hash = 1;
    uint32 error_code=2;
    string error_message =3 ;
}

message BalanceQueryRequest {
    bytes local_addr = 1;
    bytes remote_addr = 2;
}

message BalanceQueryResponse{
    bytes local_addr = 1;
    uint64 local_balance = 2;
    bytes remote_addr = 3;
    uint64 remote_balance = 4;
    uint64 total_pay_amount = 5;
}

message NextHop {
    bytes remote_addr = 1;
    uint64 amount = 2;
}

message MultiHopChannelRequest{
    ChannelTransactionRequest request = 1;
    repeated NextHop hops = 2;
}

message ExchangeSeedMessageRequest{
    bytes sender_seed  = 1;
}

message ExchangeSeedMessageResponse{
    bytes sender_seed  = 1;
    bytes receiver_seed = 2;
}

message AntQueryMessage {
    bytes s_value = 1;
    bytes sender_addr = 2;
    repeated BalanceQueryResponse balance_query_response_list= 3;
}

message AntFinalMessage {
    bytes r_value = 1;
    repeated BalanceQueryResponse balance_query_response_list= 2;
}

message RouterNetworkMessage {
    oneof router_message_items {
        ExchangeSeedMessageRequest exchange_seed_request = 1;
        ExchangeSeedMessageResponse exchange_seed_response = 2;
        AntQueryMessage ant_query_message = 3;
        AntFinalMessage ant_final_message = 4;
        BalanceQueryRequest balance_query_request = 5;
        BalanceQueryResponse balance_query_response = 6;
    }
}
