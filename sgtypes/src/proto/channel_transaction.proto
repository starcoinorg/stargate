syntax = "proto3";
option go_package = "starcoin/sgtypes";
package sgtypes;

import "transaction.proto";

message ChannelTransactionRequest {
    ChannelTransactionProposal proposal = 1;
    ChannelTransactionSigs channel_txn_sigs = 2;
    bool travel = 3;
}

message ChannelTransactionResponse {
    ChannelTransactionProposal proposal = 1;
    ChannelTransactionSigs channel_txn_sigs = 2;
}

message ChannelTransactionSigs {
    bytes address = 1;
    bytes public_key = 2;
    bytes channel_payload_signature = 3;
    bytes witness_data_hash = 4;
    bytes witness_data_signature = 5;
    bytes travel_output_witness_signature = 6;
}

message SignedChannelTransaction {
    ChannelTransaction raw_tx = 1;
    repeated bytes signers = 2;
    repeated ChannelTransactionSigs signatures = 3;
}

message ChannelTransactionProposal {
    ChannelTransaction channel_txn = 1;
    bytes proposer_public_key = 2;
    bytes proposer_signature = 3;
}

message ChannelTransaction {
    uint64 version = 1;
    bytes channel_address = 2;
    uint64 channel_sequence_number = 3;
    ChannelOp operator = 4;
    repeated types.TransactionArgument args = 5;
    bytes proposer = 6;
    uint64 sequence_number = 7;
    uint64 expiration_time = 8;
}

message ChannelOp {
    ChannelOpType op_type = 1;

    // The op package name. Empty if `type` is Open/Close.
    string package_name = 2;
    // The op script name. Empty if `type` is Open/Close.
    string script_name = 3;

    // used when op_type is ChannelOp.Action
    bytes module_address = 4;
    string module_name = 5;
    string function_name = 6;
}

enum ChannelOpType {
    Open = 0;
    Execute = 1;
    Action = 2;
    Close = 3;
}