version: 2.1

executors:
  build-executor:
    docker:
      - image: circleci/rust:stretch
    resource_class: xlarge
  audit-executor:
    docker:
      - image: circleci/rust:stretch
    resource_class: xlarge

commands:
  print_versions:
    description: Version Info
    steps:
      - run:
          name: Version Info
          command: rustc --version; cargo --version; rustup --version
  env_setup:
    description: Environment Setup
    steps:
      - run:
          name: Setup Env
          command: |
            echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo 'export IMAGE_NAME=myapp' >> $BASH_ENV
            echo 'export LIBRA_DUMP_LOGS=1' >> $BASH_ENV
            echo 'export CARGO_INCREMENTAL=0' >> $BASH_ENV
  install_deps:
    steps:
      - run:
          name: Install Dependencies
          command: |
            sudo sh -c 'echo "deb http://deb.debian.org/debian stretch-backports main" > /etc/apt/sources.list.d/backports.list'
            sudo apt-get update
            sudo apt-get install -y protobuf-compiler/stretch-backports cmake curl
            sudo apt-get clean
            sudo rm -r /var/lib/apt/lists/*
            rustup component add clippy rustfmt
  build_setup:
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update
      - print_versions
      - env_setup
      - install_deps
  build_teardown:
    steps:
      - run:
          name: Check for changed and untracked files
          command: ./libra/scripts/changed-files.sh

jobs:
  build:
    executor: build-executor
    parallelism: 1
    steps:
      - build_setup
      - run:
          name: Linting
          command: cargo fmt -- --check
      - run:
          name: Build Dev
          command: RUST_BACKTRACE=1 cargo build -j 8 --all
      - run:
          name: Run All Unit Tests
          command: RUST_BACKTRACE=full RUST_LOG=info cargo test -j 8 --all --exclude network-libp2p --exclude sgnetwork -- --test-threads=1 --nocapture
      - build_teardown
  audit:
    executor: audit-executor
    steps:
      - build_setup
      - run:
          name: Cargo Audit
          command: |
            cargo install --force cargo-audit
            cargo audit
      - build_teardown

workflows:
  commit-workflow:
    jobs:
      - build

  scheduled-workflow:
    triggers:
      - schedule:
          cron: "14 14 * * *"
          filters:
            branches:
              only: master
    jobs:
      - audit
